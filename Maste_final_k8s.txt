Step1:

Master Node:

 hostnamectl set-hostname k8s.master.local
 hostname

Worker Node:

 hostnamectl set-hostname k8s.worker.local 
 hostname

Step2: 

 In Both Master and Worker Node update below enrties, Change your System IP

vi /etc/hosts  {Node - use your Node IP's, Dont use below IP'}

172.31.21.29 k8s.master.local  k8s.master
172.31.25.191 k8s.worker.local k8s.worker

Step3: 


Disable SE Linux:
````````````````````

sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

reboot


Step 4:



Configure Kubernetes Repository   [copy all the below Line and Paste into your Master Node Commandline.]
```````````````````````````````

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

Step 5:

Install kubelet, kubeadm, and kubectl    [Run each command]
`````````````````````````````````````` 

sudo yum install -y kubelet kubeadm kubectl
systemctl enable kubelet
systemctl start kubelet


Step 6: [copy all the 4 lines and Paste into your master Node]

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF


Step 7:

sudo modprobe overlay
sudo modprobe br_netfilter

Step 8:

# sysctl params required by setup, params persist across reboots [copy all the lines and Paste into your master Node]
`````````````````````````````````````````````````````````````````
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

Step 9:

# Apply sysctl params without reboot
`````````````````````````````````````
sudo sysctl --system

Step 10:

Install containerd.
```````````````````

sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
systemctl restart docker
systemctl enable docker

Step 11: [copy all the line and paste your master]

cat > /etc/containerd/config.toml <<EOF
[plugins."io.containerd.grpc.v1.cri"]
  systemd_cgroup = true
EOF

Restart Containerd
```````````````````
systemctl restart containerd


Cluster Creation Command:
=========================

Note: --apiserver-advertise-address=172.31.21.29    (use your Master Node IP)

kubeadm init --apiserver-advertise-address=172.31.21.29 --pod-network-cidr=192.168.0.0/24


After Successful Execution, Set Up K8s Network
````````````````````````````````````````````````

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


Run Below Commands:

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml

sudo kubectl get nodes

sudo kubectl get pods --all-namespaces

Note: below Command only run on Worker Node and this commmand you will get after init command.


kubeadm join 172.31.92.238:6443 --token rlsd1y.2u1i76lyug9gjter \
        --discovery-token-ca-cert-hash sha256:cb0aa3b83b409d9edd7ef64f678b6b26845011e5c0d7823f96bd1eb8e4487a37





